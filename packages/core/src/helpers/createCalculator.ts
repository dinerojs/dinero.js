import {
  convert,
  equal,
  hasSubUnits,
  haveSameAmount,
  haveSameCurrency,
  isNegative,
  isPositive,
  isZero,
  multiply,
  normalizeScale,
  toDecimal,
  toSnapshot,
  toUnits,
  transformScale,
  trimScale,
  safeAdd,
  safeAllocate,
  safeCompare,
  safeGreaterThan,
  safeGreaterThanOrEqual,
  safeLessThan,
  safeLessThanOrEqual,
  safeMaximum,
  safeMinimum,
  safeSubtract,
} from '..';
import type { Calculator } from '../types';

export function createCalculator<TAmount>(calculator: Calculator<TAmount>) {
  return {
    add: safeAdd(calculator),
    allocate: safeAllocate(calculator),
    compare: safeCompare(calculator),
    convert: convert(calculator),
    equal: equal(calculator),
    greaterThan: safeGreaterThan(calculator),
    greaterThanOrEqual: safeGreaterThanOrEqual(calculator),
    hasSubUnits: hasSubUnits(calculator),
    haveSameAmount: haveSameAmount(calculator),
    haveSameCurrency,
    isNegative: isNegative(calculator),
    isPositive: isPositive(calculator),
    isZero: isZero(calculator),
    lessThan: safeLessThan(calculator),
    lessThanOrEqual: safeLessThanOrEqual(calculator),
    maximum: safeMaximum(calculator),
    minimum: safeMinimum(calculator),
    multiply: multiply(calculator),
    normalizeScale: normalizeScale(calculator),
    subtract: safeSubtract(calculator),
    toDecimal: toDecimal(calculator),
    toSnapshot,
    toUnits: toUnits(calculator),
    transformScale: transformScale(calculator),
    trimScale: trimScale(calculator),
  };
}
